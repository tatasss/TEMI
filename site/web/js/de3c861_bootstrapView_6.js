;let BootstrapView=function(){};BootstrapView.prototype.tableSE=function(t){let color;let args=arguments;let html;if(args[1]!=null){html=' <table class=\'table\'>'+args[1]+'<tbody>'}
else{html=' <table class=\'table monTab\'><tbody>'};for(let i=2;i<args.length;i++){if(args[i].colorFirstCase===undefined){args[i].colorFirstCase=' '};if(args[i].colorFirstCase===null){args[i].colorFirstCase=' '};if(args[i].bottomBorder!==undefined&&args[i].bottomBorder!==null){html+=`<tr;class='bottomBorder'>`;args[i].color+=' bottomBorder';if(args[i].numTabdep!==undefined&&args[i].numTabdep!==null){if(args[i].numTabdep===0){if(args[i].font_color!==undefined&&args[i].font_color!==null){html+=`<td;class=\'font${args[i].font_color}\ bottomBorder'>${args[0][i-2]};</td>`;;                    };                    else {;                        html += `<td class="bottomBorder">${args[0][i - 2]}</td>`}}
else{html+=`<td;class='bottomBorder '>${args[0][i-2]};</td>`;;                };            };            else {;                html += `<td class="bottomBorder ">${args[0][i - 2]}</td>`}}
else{html+='<tr>';if(args[i].numTabdep!==undefined&&args[i].numTabdep!==null){if(args[i].numTabdep===0){if(args[i].font_color!==undefined&&args[i].font_color!==null){html+=`<td;class=\'font${args[i].font_color}">${args[0][i - 2]}</td>`;;                    };                    else {;                        html += `<td >${args[0][i - 2]}</td>`;;                    };                };                else {;                    html += `<td >${args[0][i - 2]}</td>`;;                };            };            else {;                html += `<td>${args[0][i - 2]}</td>`;;            };        };        for (let j = 0; j < args[i].tab.length; j++) {;            if (j === 0) {;                if (args[i].colorFirstCase !== '') {;                    color = args[i].colorFirstCase;;                };                else {;                    color = args[i].color;;                };                if (args[i].font_color !== undefined && args[i].font_color !== null) {;                    if (args[i].numTabdep !== undefined && args[i].numTabdep !== null && args[i].numTabdep !== 0) {;                        if (j + 1 === args[i].numTabdep) {;                            color += ';font' + args[i].font_color;                        };;                    } else {;;                        color += ';font' + args[i].font_color;;                    };                };                if (args[i].tab[j] != null) {;                    //console.log('ici'+(args[i].color=='blue').toString());;                    html += `<td class="${color}">${args[i].tab[j]}</td>`;;                };                else {;                    html += `<td class="${color}" />`;;                };;            };            else {;                if (j === args[i].tab.length - 1) {;                    if (args[i].fontColorLastCase === 'selectedPosNegNumber') {;                        if (args[i].tab[j] != null) {;                            if (args[i].tab[j] < 0) {;                                args[i].fontColorLastCase = 'red';;                            };                            else {;                                args[i].fontColorLastCase = '';;                            };                        };                    };                    if (args[i].fontColorLastCase !== undefined && args[i].fontColorLastCase !== null && args[i].fontColorLastCase !== '');                        args[i].font_color = args[i].fontColorLastCase;;                };                if (args[i].font_color !== undefined && args[i].font_color !== null) {;                    if (args[i].numTabdep !== undefined && args[i].numTabdep !== null && args[i].numTabdep !== 0) {;                        if (j + 1 === args[i].numTabdep) {;                            args[i].color += ';font' + args[i].font_color;                        };                    } else {;                        args[i].color += ';font' + args[i].font_color;;                    };                };                if (args[i].tab[j] != null) {;                    html += `<td class="${args[i].color}">${args[i].tab[j]}</td>`;;                };                else {;                    html += `<td class="${args[i].color}" /> `;;                };            };        };        html += '</tr>";;    };    html += "</tbody></table>";;    return html;;};;/***@description;This;function create;a;bootstrap;pannel*@param{string};type-type;of;pannel(look;doc;on;the;site:https:*@param{string};head-head;of;the;pannel;if he;is;null,the;pannel;is;generate;without;head*@param{string};body-body;of;the;pannel*@return{string};html*/;BootstrapView.prototype.pan = function (type, head, body) {;    let result = "<div class='panel panel-" + type + " '>";;    if (head !== null) {;        result += "<div class='panel-heading'>";;        result += head;;        result += "</div>';    };    result += '<div;class='panel-body'>';;    result += body;;    result += '</div></div>';;    return result;;};;/**; * @description This function create the body of the page html; * @param {string} body - the body of the page without topNav; * @return {string} html; */;BootstrapView.prototype.container = function (body) {;    return '<div;class='container'>' + body + '</div>";;};;/***@description;this;function use;a;grid;basic;bootstrap;10-2;mode.*@param{string};body-the;string;template;ready;inserted in the;col;to;take;10/12;of;the;grid*@param{string};nav-the;string;html;template;ready;inserted in the;column;2/12;on;the;right;on;the;grid*@return{string};html*/;BootstrapView.prototype.GridNavCote = function (body, nav) {;    let result = "<div class='row'><div class='col-sm-10'>";;    result += body;;    result += "</div><div;class='col-sm-2'>';;    result += nav;;    result += '</div></div>';;    return result;;};;/**; * @description this function create a button created with a tag <a>; * @param {string} href  - the location where u want to go; * @param {string} html - the entitled of your tag; * @return {string} html; */;BootstrapView.prototype.buttonBalA = function (href, html) {;    return `<a  class=\'btn btn-default\' type=\'submit\' href=\'${href}\'>${html}</a>`;;};;/**; * @description This unction create a button created with a tag <button>; * @param {string} type - the type of button (look doc on the site : https://www.w3schools.com/bootstrap/bootstrap_ref_css_buttons.asp); * @param {function()} onclick - the callback where you want to use; * @param {string} html - the entitled of your tag; * @param {string} value - the value of your tag; * @return {string} html; */;BootstrapView.prototype.buttonBaBu = function (type, onclick, html, value) {;    return `<button class=\'btn btn-${type}\' type=\'button\' onclick='${onclick};' value='${value};' \'>${html}</button>`;;};;/**; * @description This function create a liste-vertical-group on bootstrap.; * @param {array}tab - the array of your list; * @return {string} html; */;BootstrapView.prototype.listeItem = function (tab) {;    let html = '<ul;class='list-group vertical-form'>';;    tab.forEach(function (item) {;        html += `<li class='list-group-item'>${item}</li>`;;    });;    return html;;};;/**; * @description This function create a collapse group pannel on bootstrap; * @param {string} objCollapse -the obj of your collapse; * (take all args ,collapse obj ={title:\'yourTitle\',body:\'yourBody\'}); * @return {string} html; */;BootstrapView.prototype.collapse = function (objCollapse) {;    let args = arguments;;    let int;;    let html = '<div;class='panel-group';id='accordion'>';;    for (let i = 1; i < args.length; i++) {;        if (args[0] !== null && args[0] !== undefined) {;            if (i === args[0]) {;                int = 'in';;            };            else {;                int = '';;            };        };        html += `<div class='panel;panel-default'><div class='panel-heading'><h4 class='panel-title'>`;;        html += `<a data-toggle='collapse' data-parent='#accordion' href='#collapse${i+1};'>`;;        html += `${args[i].tittle}</a></h4></div><div id='collapse${i+1};' class='panel-collapse;collapse;${int};'>`;;        html += '<div;class='panel-body'>' + args[i].body + '</div>\n" +;            "</div>\n' +;            '</div>";;    };    return html;//+'</div>'};BootstrapView.prototype.bootstrapTemiTabSpe=function(t,e,o,l,r){let myTab=[];let tabExcel=[];let cpt=0;let landName;for(let i=0;i<e.length/6;i++){myTab.push('<br/><table class=\'table\' id=\'maTable'+cpt+'\'><thead><tr><th/>')};e.forEach(function(t,e){if(e%6===0&&e>0){myTab[cpt]+='</tr></thread><tbody>';cpt++};myTab[cpt]+='<th>';myTab[cpt]+=t;myTab[cpt]+='</th>';if(e!==0){landName=t.slice(1,Array.from(t).length)}
else{landName=t};tabExcel.push(ref.donnerCodePays(t))});o.forEach(function(e,a){cpt=0;myTab[cpt]+='<tr><td>';myTab[cpt]+=t[a]+'</td>';let cotee='';Array.from(t[a]).forEach(function(t){if(t!==' '){cotee+=t}});tabExcel.push(cotee);e.forEach(function(e,r){if(r%6===0&&r>0){myTab[cpt]+='</tr>';cpt++;myTab[cpt]+='<tr><td>';myTab[cpt]+=t[a]+'</td>'};myTab[cpt]+='<td>';myTab[cpt]+=myMath.separatorNumber(Math.round(e*100)/100);myTab[cpt]+=' % </td>';tabExcel.push(Math.round(e*100)/100)});myTab[cpt]+='</tr>\n'});for(let i=0;i<e.length/6;i++){myTab[i]+='</tbody></table>'};let html='<h1>Tableau des TEMI de chaque pays :</h1>';myTab.forEach(function(t){html+=t});tabExcel.push('ligne');tabExcel.push('entreprise');tabExcel.push('marge_%');l.forEach(function(t,e){tabExcel.push('entreprise'+(e+1));tabExcel.push(t)});tabExcel.push('ligne');tabExcel.push('ligne');tabExcel.push('actualisation');tabExcel.push(localStorage.getItem('compaActu')+'%');let reg;reg=' ';if(localStorage.getItem('compatRegime')==='gen'){reg='codes_générales_des_impots'}
else{reg='codes_des_investissements'};tabExcel.push('ligne');tabExcel.push('ligne');tabExcel.push('régime_Fiscal');tabExcel.push(reg);r+='.xls';let titreHtml='';Array.from(r).forEach(function(t){if(t!==' '){titreHtml+=t}});tabExcel.toString=function(){let html='';this.forEach(function(t,e){if(e===tabExcel.length){html+=t}
else{html+=t+','}});return html};html+=`<a;class='btn btn-default ';download='${titreHtml}';href='#';id='anchorNewApi-xls';onClick=newApi('xls','${tabExcel.toString()}','${titreHtml}')>Récupérer;Excel</a>`;;    //console.log(`<a;class='btn btn-default ';download='${titreHtml}';href='#';id='anchorNewApi-xls';onClick=newApi('xls','${tabExcel.toString()}','${titreHtml}')>Récupérer;Excel</a>`);;    return html;;};;/***@description;This;function create;an;alert*@param{string};str-the;body;of;alert*@return{string};*/;BootstrapView.prototype.alertDanger=function(str){;    return `<div class="alert alert-danger">${str}</div>`};let bootstrap=new BootstrapView();